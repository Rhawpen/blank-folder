{"version":3,"sources":["index.js"],"names":["apiKey","city","apiUrl","concat","console","searchCity","log","then","showWeather","formatDay","timestamp","getDay","displayForecast","response","forecastElement","document","getElementById","forecast","data","daily","forecastHtml","index","forecastDay","time","condition","icon","round","temperature","minimum","Math","querySelector","maximum","getForecast","coordinates","showCity","event","preventDefault","longitude","latitude","axios","get","current","innerHTML","fahrenheit","description","addEventListener","celsiusToFahrenheit","humidity","add","celsius","classList","remove","value","navigator","hour","getCurrentPosition","position","coords","minute","form","getThisPosition","date","Date","getHours","getMinutes","fullTime","toLocaleDateString","weekday"],"mappings":"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","file":"index.min.js","sourcesContent":["let apiKey = \"ff304a92t9c244dc46fb12f2cefo3e03\";\r\n\r\nfunction searchCity(city) {\r\n  let apiUrl = `https://api.shecodes.io/weather/v1/current?query=${city}&key=${apiKey}`;\r\n  console.log(apiUrl)\r\n\r\n  axios.get(apiUrl).then(showWeather);\r\n}\r\n\r\nfunction formatDay(timestamp){\r\n  let date = new Date(timestamp * 1000);\r\n  let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  let day = days[date.getDay()];\r\n\r\n  return day;\r\n}\r\n\r\nfunction displayForecast(response){\r\n  let forecastElement = document.getElementById(\"forecast\");\r\n  let forecast = response.data.daily;\r\n  let forecastHtml = \"<div>\";\r\n\r\n  forecast.forEach(function (forecastDay, index) {\r\n    if (index < 5){\r\n      forecastHtml += `\r\n  <ul>\r\n    <li class=\"forecast-day\">${formatDay(forecastDay.time)}</li>\r\n    <li class=\"forecast-icon\"><img src=\"http://shecodes-assets.s3.amazonaws.com/api/weather/icons/${\r\n      forecastDay.condition.icon\r\n    }.png\" alt=\"forecastDay.condition.description\">\r\n    </li>\r\n    <li class=\"forecast-temperature\">\r\n      <span class=\"min-temperature\">${Math.round(\r\n        forecastDay.temperature.minimum\r\n      )}</span>°\r\n      <span class=\"max-temperature\">${Math.round(\r\n        forecastDay.temperature.maximum\r\n      )}</span>°\r\n    </li>\r\n  </ul>\r\n  `;\r\n    }\r\n    \r\n  });\r\n  forecastHtml += \"</div>\";\r\n  forecastElement.innerHTML = forecastHtml;\r\n}\r\n\r\nfunction getForecast(coordinates){\r\n  let apiUrl = `https://api.shecodes.io/weather/v1/forecast?lon=${coordinates.longitude}&lat=${coordinates.latitude}&key=${apiKey}`;\r\n\r\n  axios.get(apiUrl).then(displayForecast)\r\n\r\n}\r\n\r\n\r\nfunction showWeather(response) {\r\n  document.querySelector(\"#city\").innerHTML = response.data.city;\r\n  temperature = Math.round(response.data.temperature.current);\r\n  document.querySelector(\"#temperature\").innerHTML = temperature;\r\n  let icon = response.data.condition.icon;\r\n  let description =  response.data.condition.description;\r\n  document.querySelector(\r\n    \"#weather-icon\"\r\n  ).innerHTML = `<img src=\"http://shecodes-assets.s3.amazonaws.com/api/weather/icons/${icon}.png\" alt=\"${description}\" id=\"weather-icon\">`;\r\n  document.querySelector(\"#humidity\").innerHTML = response.data.temperature.humidity;\r\n  document.querySelector(\"#wind\").innerHTML = Math.round(\r\n    response.data.wind.speed\r\n  );\r\n  document.querySelector(\"#description\").innerHTML = description;\r\n\r\n  getForecast(response.data.coordinates);\r\n}\r\n\r\nfunction showCity(event) {\r\n  event.preventDefault();\r\n  let city = document.querySelector(\"#search-input\").value;\r\n\r\n  searchCity(city);\r\n}\r\n\r\nfunction getThisPosition() {\r\n  navigator.geolocation.getCurrentPosition((position) => {\r\n    let apiUrl = `https://api.shecodes.io/weather/v1/current?lon=${position.coords.longitude}&lat=${position.coords.latitude}&key=${apiKey}&units=metric`;\r\n\r\n    axios.get(apiUrl).then(showWeather);\r\n  });\r\n}\r\n\r\nlet fahrenheit = document.querySelector(\"#fahrenheit\");\r\nfahrenheit.addEventListener(\"click\", function (event) {\r\n  event.preventDefault();\r\n  let celsiusToFahrenheit = document.querySelector(\"#temperature\");\r\n  celsiusToFahrenheit.innerHTML = Math.round((temperature * 9) / 5 + 32);\r\n  fahrenheit.classList.add(\"active\");\r\n  celsius.classList.remove(\"active\");\r\n});\r\n\r\nlet celsius = document.querySelector(\"#celsius\");\r\ncelsius.addEventListener(\"click\", function (event) {\r\n  event.preventDefault();\r\n  document.querySelector(\"#temperature\").innerHTML = temperature;\r\n  fahrenheit.classList.remove(\"active\");\r\n  celsius.classList.add(\"active\");\r\n});\r\n\r\nlet temperature = null;\r\nlet date = new Date();\r\nlet hour = date.getHours();\r\nif (hour < 12) {\r\n  document.getElementById(\"day-time\").innerHTML = \"AM\";\r\n} else if (hour === 12) {\r\n  document.getElementById(\"day-time\").innerHTML = \"PM\";\r\n}\r\nlet minute = date.getMinutes();\r\nif (minute < 10) {\r\n  minute = `0${minute}`;\r\n}\r\nlet fullTime = `${hour}:${minute}`;\r\n\r\nlet form = document.querySelector(\"form\");\r\nform.addEventListener(\"submit\", showCity);\r\n\r\ndocument.querySelector(\"#day\").innerHTML = date.toLocaleDateString(\"en-EN\", {\r\n  weekday: \"long\",\r\n});\r\ndocument.querySelector(\"#time\").innerHTML = fullTime;\r\n\r\n// DEFAULT LOCATION\r\ngetThisPosition();\r\n"]}