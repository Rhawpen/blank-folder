{"version":3,"sources":["index.js"],"names":["apiKey","searchCity","city","apiUrl","axios","get","then","showWeather","response","document","querySelector","innerHTML","data","name","temperature","Math","round","main","temp","icon","weather","humidity","wind","speed","description","showCity","event","preventDefault","value","getThisPosition","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fahrenheit","addEventListener","celsiusToFahrenheit","classList","add","celsius","remove","date","Date","hour","getHours","getElementById","minute","getMinutes","fullTime","form","toLocaleDateString","weekday"],"mappings":"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","sourcesContent":["let apiKey = \"2db5d5b656f561f30006eb6878ed720d\";\r\n\r\nfunction searchCity(city){\r\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n\r\n  axios.get(apiUrl).then(showWeather);\r\n}\r\n\r\nfunction showWeather(response) {\r\n  document.querySelector(\"#city\").innerHTML = response.data.name;\r\n  temperature = Math.round(response.data.main.temp);\r\n  document.querySelector(\"#temperature\").innerHTML = temperature;\r\n  let icon = response.data.weather[0].icon;\r\n  document.querySelector(\r\n    \"#weather-icon\"\r\n  ).innerHTML = `<img src=\"https://openweathermap.org/img/wn/${icon}@2x.png\" alt=\"\" id=\"weather-icon\">`;\r\n  document.querySelector(\"#humidity\").innerHTML = response.data.main.humidity;\r\n  document.querySelector(\"#wind\").innerHTML = Math.round(\r\n    response.data.wind.speed\r\n  );\r\n  document.querySelector(\"#description\").innerHTML = response.data.weather[0].description;\r\n}\r\n\r\nfunction showCity(event) {\r\n  event.preventDefault();\r\n  let city = document.querySelector(\"#search-input\").value;\r\n  \r\n  searchCity(city)\r\n}\r\n\r\nfunction getThisPosition(){\r\n  navigator.geolocation.getCurrentPosition(position => {\r\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${apiKey}&units=metric`;\r\n\r\n      axios.get(apiUrl).then(showWeather);\r\n  });\r\n}\r\n\r\nlet fahrenheit = document.querySelector(\"#fahrenheit\");\r\nfahrenheit.addEventListener('click', function (event){\r\n  event.preventDefault()\r\n  let celsiusToFahrenheit = document.querySelector(\"#temperature\");\r\n  celsiusToFahrenheit.innerHTML = Math.round((temperature * 9) / 5 + 32);\r\n  fahrenheit.classList.add('active');\r\n  celsius.classList.remove('active')\r\n});\r\n\r\nlet celsius = document.querySelector(\"#celsius\");\r\ncelsius.addEventListener('click', function (event){\r\n  event.preventDefault()\r\n  document.querySelector(\"#temperature\").innerHTML = temperature;\r\n  fahrenheit.classList.remove(\"active\");\r\n  celsius.classList.add(\"active\");\r\n});\r\n\r\nlet temperature = null;\r\nlet date = new Date();\r\nlet hour = date.getHours();\r\nif (hour < 12){\r\n  document.getElementById('day-time').innerHTML = 'AM'\r\n}else if (hour === 12){\r\n  document.getElementById(\"day-time\").innerHTML = \"PM\";\r\n}\r\nlet minute = date.getMinutes();\r\nif (minute < 10){\r\n  minute = `0${minute}`\r\n}\r\nlet fullTime = `${hour}:${minute}`;\r\n\r\nlet form = document.querySelector(\"form\");\r\nform.addEventListener('submit', showCity)\r\n\r\ndocument.querySelector(\"#day\").innerHTML = date.toLocaleDateString(\r\n  \"en-EN\",\r\n  { weekday: \"long\" }\r\n);\r\ndocument.querySelector(\"#time\").innerHTML = fullTime;\r\n\r\n// DEFAULT LOCATION\r\ngetThisPosition();\r\n"],"file":"index.dev.js"}